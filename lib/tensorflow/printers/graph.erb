<% graph.operations.each do |operation|
   op_def = self.graph.op_def(operation.op_type) %>
node {
  name: "<%= operation.name %>"
  op: "<%= operation.op_type %>"
  <% operation.inputs.each do |input| %>
    <% input_operation = Tensorflow::Graph::Operation.new(self.graph, input[:oper]) %>
  input: "<%= input_operation.name %><%= input[:index] > 0 ? ":#{input[:index]}" : "" %>"
  <% end %>
  <% operation.control_inputs.each do |control_input| %>
  input: "^<%= control_input.name %>"
  <% end %>
  <% op_def.attr.sort_by(&:name).each do |attr_def|
     attr = operation.attr(attr_def.name) %>
  attr {
    key: "<%= attr_def.name %>"
    value {
  <% case attr.metadata[:type]
     when :tensor %>
      tensor {
        dtype: DT_<%= attr.tensor.dtype.upcase %>
        tensor_shape {
          <% attr.tensor.shape.each do |dim| %>
          dim {
            size: <%= dim %>
          }
          <% end %>
        }
        <%= attr.tensor.dtype %>_val: <%= attr.tensor.value.is_a?(Numo::NArray) ? attr.tensor.value.to_a : attr.tensor.value %>
        tensor_content: <%= attr.proto.tensor.tensor_content.dump %>
      }
    <% when :type %>
      <% if attr.list? %>
      list {
        <% attr.value.each do |list_value| %>
        type: DT_<%= list_value.to_s.upcase %>
        <% end %>
      }
      <% else %>
      type: DT_<%= attr.value.to_s.upcase %>
      <% end %>
    <% when :bool %>
      b: <%= attr.value ? 'true' : 'false' %>
    <% when :int %>
      i: <%= attr.value %>
    <% when :shape %>
      <% if attr.list? %>
        list {
        <% attr.value.each do |list_value| %>
          shape: {
            dim {
              size: <%= list_value.join(', ') %>
            }

        <% end %>
        }
      <% elsif attr.value.empty? %>
        shape {
        }
      <% else %>
      shape {
        <%= attr.value.join(', ') %>
      }
      <% end %>
    <% when :string %>
      s: "<%= attr.value %>"
    <% when :func %>
      func {
        name: "<%= attr.value %>"
      }
    <% end %>
    }
  }
  <% end %>
}
<% end %>
versions {
  producer: 119
}
